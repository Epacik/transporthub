<UserControl xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:vm="using:TransportHub.Core.ViewModels"
             xmlns:views="using:TransportHub.Core.Views"
             xmlns:fa="using:FluentAvalonia.UI.Controls"
             xmlns:converters="using:TransportHub.Core.Converters"
             xmlns:controls="using:TransportHub.Core.Controls"
             xmlns:m="using:TransportHub.Core.Markup"
             mc:Ignorable="d" d:DesignWidth="800" d:DesignHeight="450"
             x:Class="TransportHub.Core.Views.SettingsView"
             x:DataType="vm:SettingsViewModel">
    
    <UserControl.Resources>
        <ResourceDictionary>
            <converters:ObjectIsNullConverter x:Key="ObjectIsNullConverter"/>
            <converters:Base64ToIconSourceConverter x:Key="Base64ToIconSourceConverter"/>
        </ResourceDictionary>
    </UserControl.Resources>

    <TabControl>
        <TabItem Header="Profil">
            <Grid RowDefinitions="50,5,*,50"
              Grid.Column="1"
              IsVisible="{Binding EditedUser, Converter={StaticResource ObjectIsNullConverter}}">

                <Border Background="{DynamicResource AccentFillColorDefaultBrush}"
                        IsVisible="{Binding EditedUser.IsDirty, FallbackValue=false}"
                        CornerRadius="5">
                    <TextBlock Foreground="White"
                               VerticalAlignment="Center"
                               HorizontalAlignment="Center">
                        Istnieją niezapisane zmiany. Nie zapomnij ich zapisać!
                    </TextBlock>
                </Border>

                <Grid Grid.Row="2"
                      DataContext="{Binding EditedUser}"
                      RowDefinitions="50,20,30,22,32,10,22,32,10,*"
                      ColumnDefinitions="70,5,145,20,*"
                      Margin="10,0">

                    <Button Grid.RowSpan="2"
                            VerticalContentAlignment="Center"
                            HorizontalContentAlignment="Center"
                            Command="{Binding $parent[views:SettingsView].((vm:SettingsViewModel)DataContext).ChangePictureCommand}">
                        <ToolTip.Tip>
                            <TextBlock Text="Zmień obraz"/>
                        </ToolTip.Tip>
                        <fa:IconSourceElement MaxWidth="60"
                                              MaxHeight="60"
                                              RenderOptions.BitmapInterpolationMode="HighQuality"
                                              RenderOptions.EdgeMode="Antialias"
                                              IconSource="{Binding
                                             Picture,
                                             Converter={StaticResource Base64ToIconSourceConverter},
                                             ConverterParameter={m:TablerIconSource IconUser, FontSize=60}}"/>
                    </Button>


                    <TextBox FontSize="25"
                               Grid.Column="2"
                               Grid.ColumnSpan="3"
                               Text="{Binding Name}"/>

                    <TextBlock Grid.Row="1"
                               Grid.Column="2"
                               Grid.ColumnSpan="3">
                        <Run Text="Id: "/>
                        <Run Text="{Binding Id}"/>
                    </TextBlock>

                    <TextBlock Grid.Row="3"
                               Grid.ColumnSpan="3"
                               Text="Typ konta"/>

                    <TextBlock Grid.Row="4"
                               Grid.ColumnSpan="3"
                               HorizontalAlignment="Stretch"
                               Text="{Binding UserType}"/>

                    <TextBlock Grid.Row="6"
                               Grid.ColumnSpan="3"
                               Text="Data ważności hasła"/>


                    <TextBlock Text="{Binding PasswordExpirationDate, StringFormat='yyyy-MM-dd'}"
                               Width="180"
                               Grid.Row="7"
                               Grid.ColumnSpan="5"/>

                    <Button Grid.Row="9"
                            Grid.ColumnSpan="3"
                            Content="Zmień hasło"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Top"
                            IsVisible="{Binding !$parent[views:SettingsView].((vm:SettingsViewModel)DataContext).ChangePasswordEnabled}"
                            Command="{Binding $parent[views:SettingsView].((vm:SettingsViewModel)DataContext).ChangePasswordCommand}"/>

                    <Grid RowDefinitions="auto,auto"
                          ColumnDefinitions="*,40"
                          Grid.Row="9"
                          Grid.ColumnSpan="5"
                          IsVisible="{Binding $parent[views:SettingsView].((vm:SettingsViewModel)DataContext).ChangePasswordEnabled}">

                        <Border Margin="-5"
                                Grid.RowSpan="2"
                                Grid.ColumnSpan="2"
                                BorderBrush="Red"
                                Background="Red"
                                CornerRadius="5"
                                IsVisible="{Binding !$parent[views:SettingsView].((vm:SettingsViewModel)DataContext).IsPasswordValid}"/>

                        <TextBox PasswordChar="●"
                                 Text="{Binding $parent[views:SettingsView].((vm:SettingsViewModel)DataContext).NewPassword}"
                                 RevealPassword="{Binding $parent[views:SettingsView].((vm:SettingsViewModel)DataContext).RevealPassword}"/>

                        <Button Grid.Column="1"
                                x:Name="ShowPasswordButton"
                                VerticalAlignment="Stretch"
                                IsPressed="{Binding
                            $parent[views:SettingsView].((vm:SettingsViewModel)DataContext).RevealPassword,
                            Mode=OneWayToSource}">
                            <Button.Styles>
                                <Styles>
                                    <Style Selector="Button">
                                        <Setter Property="ContentTemplate">
                                            <DataTemplate>
                                                <controls:TablerIcon Icon="IconEyeClosed"/>
                                            </DataTemplate>
                                        </Setter>
                                    </Style>
                                    <Style Selector="Button:pressed">
                                        <Setter Property="ContentTemplate">
                                            <DataTemplate>
                                                <controls:TablerIcon Icon="IconEye"/>
                                            </DataTemplate>
                                        </Setter>
                                    </Style>
                                </Styles>
                            </Button.Styles>
                        </Button>

                        <TextBlock Grid.Row="1"
                                   Grid.ColumnSpan="2"
                                   Text="{Binding $parent[views:SettingsView].((vm:SettingsViewModel)DataContext).PasswordValidationError}"
                                   IsVisible="{Binding !$parent[views:SettingsView].((vm:SettingsViewModel)DataContext).IsPasswordValid}"
                                   Foreground="White"/>

                    </Grid>
                </Grid>


                <StackPanel Orientation="Horizontal"
                            Spacing="10"
                            Grid.Row="3"
                            HorizontalAlignment="Right">
                    <Button IsEnabled="{Binding IsValid}"
                            Command="{Binding RevertChangesCommand}">
                        Cofnij zmiany
                    </Button>
                    <Button Classes="accent"
                            IsEnabled="{Binding IsValid}"
                            Command="{Binding SaveChangesCommand}">
                        Zapisz
                    </Button>
                </StackPanel>
            </Grid>
        </TabItem>

        <TabItem Header="Licencje"
             IsSelected="{Binding IsLicensesTabOpen}">
            <views:UsedLicensesView DataContext="{Binding UsedLicensesViewModel}"/>
        </TabItem>
    </TabControl>
    
</UserControl>
